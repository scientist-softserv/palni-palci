---
stages:
  - build
  - go

before_script:
  - export TAG=${CI_COMMIT_SHORT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

hyku.build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker-compose build web
    - docker-compose build worker
    - docker-compose push web
    - docker-compose push worker
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  tags:
    - local

# lint:
#   stage: go
#   image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   allow_failure: true
#   script:
#     - cd /app/samvera/hyrax-webapp
#     - bundle check || bundle
#     - bundle exec rubocop
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#   tags:
#     - kubernetes

# test:
#   stage: go
#   image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   allow_failure: true
#   variables:
#     ALLOW_ANONYMOUS_LOGIN: "yes"
#     BULKRAX_ENABLED: "true"
#     CAPYBARA_SERVER: build
#     CONFDIR: "/app/samvera/hyrax-webapp/solr/conf"
#     CHROME_HOSTNAME: chrome
#     DB_ADAPTER: postgresql
#     DB_CLEANER_ALLOW_REMOTE_DB_URL: "true"
#     DB_HOST: db
#     DB_NAME: hyku
#     DB_URL: postgres://postgres:postgres@db/hyku
#     DB_USER: postgres
#     DB_HOST: db
#     DB_PORT: 5432
#     DB_TEST_NAME: hyku_test
#     FCREPO_HOST: fcrepo
#     FCREPO_PORT: 8081
#     FCREPO_URL: http://fcrepo:8081/rest
#     FF_NETWORK_PER_BUILD: 1
#     GIT_STRATEGY: none
#     HUB_URL: http://chrome:4444/wd/hub
#     HYKU_ADMIN_HOST:
#     HYKU_ADMIN_ONLY_TENANT_CREATION: "false"
#     HYKU_DEFAULT_HOST: "%{tenant}.hyku.docker"
#     HYKU_MULTITENANT: "true"
#     HYRAX_ACTIVE_JOB_QUEUE: sidekiq
#     HYRAX_FITS_PATH:
#     JAVA_OPTIONS: -Djetty.port=8081
#     IN_DOCKER: "true"
#     LD_LIBRARY_PATH: /opt/fits/tools/mediainfo/linux
#     POSTGRESQL_DATABASE: hyku
#     POSTGRESQL_PASSWORD: postgres
#     POSTGRES_USER: postgres
#     RAILS_ENV: test
#     RAILS_LOG_TO_STDOUT: 'true'
#     RAILS_SERVE_STATIC_FILES: 'true'
#     REDIS_HOST: redis
#     SECRET_KEY_BASE: asdf
#     SETTINGS__RESTRICT_CREATE_AND_DESTROY_PERMISSIONS: 'true'
#     SOLR_ADMIN_PASSWORD: admin
#     SOLR_ADMIN_USER: admin
#     SOLR_ADMIN_USERNAME: admin
#     SOLR_CLOUD_BOOTSTRAP: "yes"
#     SOLR_COLLECTION_NAME: hyku-test
#     SOLR_CONFIGSET_NAME: hyku
#     SOLR_ENABLE_AUTHENTICATION: "yes"
#     SOLR_ENABLE_CLOUD_MODE: "yes"
#     SOLR_HOST: solr
#     SOLR_PORT: 8983
#     SOLR_URL: http://admin:admin@solr:8983/solr/
#     SOLR_ZK_HOSTS: zk:2181
#     ZOO_HEAP_SIZE: 128
#     ZOO_PORT_NUMBER: 2181
#   services:
#     - name: bitnami/postgresql:12.6.0
#       alias: db
#     - name: samvera/fcrepo4:4.7.5
#       alias: fcrepo
#     - name: redis:5-alpine
#       alias: redis
#     - name: bitnami/zookeeper:3
#       alias: zk
#     - name: bitnami/solr:8
#       alias: solr
#     - name: selenium/standalone-chrome:3.141
#       alias: chrome
#   before_script:
#     - >-
#       solrcloud-upload-configset.sh /app/samvera/hyrax-webapp/solr/conf &&
#       SOLR_COLLECTION_NAME=hydra-test solrcloud-assign-configset.sh &&
#       solrcloud-assign-configset.sh
#   script:
#     - rm -f /home/app/webapp/tmp/capybara/*
#     - rm -rf $CI_PROJECT_DIR/capybara
#     - cd /app/samvera/hyrax-webapp
#     # - sleep 30m
#     - rspec --format progress --tag ~speed:slow --format RspecJunitFormatter --out rspec.xml
#   after_script:
#     - test -e /home/app/webapp/tmp/capybara && cp -r /home/app/webapp/tmp/capybara $CI_PROJECT_DIR/capybara
#     - test -e /home/app/webapp/rspec.xml && cp /home/app/webapp/rspec.xml $CI_PROJECT_DIR/rspec.xml
#   rules:
#     - if: $CI_COMMIT_BRANCH == "main"
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#   artifacts:
#     when: always
#     paths:
#       - capybara/*.html
#       - rspec.xml
#     reports:
#       junit: rspec.xml
#     expire_in: 1 week
#     when: always
#   tags:
#     - docker
#   parallel: 6

# hyku.staging:
#   stage: go
#   extends:
#     - .deploy
#   variables:
#     DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
#     DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
#     WORKER_IMAGE: $CI_REGISTRY_IMAGE/worker
#     HELM_EXPERIMENTAL_OCI: 1
#     HELM_EXTRA_ARGS: >
#       --values ops/staging-deploy.yaml
#   script:
#     # - "keybase status | grep 'Logged in:     no' && keybase oneshot"
#     # - ./chart/bin/decrypt staging # wont need as we are swapping to the tmpl.yaml version
#     - envsubst < ops/staging-deploy.tmpl.yaml > ops/staging-deploy.yaml
#     - ./bin/helm_deploy staging-palni-palci staging
#   after_script:
#     - rm -f ./chart/*-values.yaml
#     - keybase logout
#   rules:
#     - if: $CI_COMMIT_BRANCH == "main"
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#       when: manual
#   allow_failure: true
#   tags:
#     - local

# hyku.production:
#   stage: go
#   extends:
#     - .deploy
#   variables:
#     DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
#     DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
#     WORKER_IMAGE: $CI_REGISTRY_IMAGE/worker
#     HELM_EXPERIMENTAL_OCI: 1
#     HELM_EXTRA_ARGS: >
#       --values ops/production-deploy.yaml
#   script:
#     # - export KUBECONFIG=$KUBECONFIG_PALS
#     # - "keybase status | grep 'Logged in:     no' && keybase oneshot"
#     # - ./chart/bin/decrypt production
#     # - ./chart/bin/deploy production $CI_COMMIT_SHORT_SHA
#     - envsubst < ops/production-deploy.tmpl.yaml > ops/production-deploy.yaml
#     - ./bin/helm_deploy production-palni-palci production
#   # after_script:
#   #   - rm -f ./chart/*-values.yaml
#   #   - keybase logout
#   rules:
#     - if: $CI_COMMIT_BRANCH == "main"
#       when: manual
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#       when: manual
#   allow_failure: true
#   tags:
#     - local

# .deploy:
#   image: dtzar/helm-kubectl:3.5.3